<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linz blog</title>
    <link>https://linz1989.github.io/</link>
    <description>Recent content on linz blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 19 Jun 2016 20:08:02 +0800</lastBuildDate>
    <atom:link href="https://linz1989.github.io/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>AngularJS学习笔记(1)</title>
      <link>https://linz1989.github.io/life/angular-learning-1/</link>
      <pubDate>Sun, 19 Jun 2016 20:08:02 +0800</pubDate>
      
      <guid>https://linz1989.github.io/life/angular-learning-1/</guid>
      <description>&lt;p&gt;最先是买的Angular教程是《用AngularJS开发下一代Web应用》，但发现有的地方写的不够详细，让人很疑惑。&lt;/p&gt;

&lt;p&gt;现在看的教程书籍是《Mastering Web Application Development with AngularJS》,这本书先试读了它的电子版，感觉更适合初学者。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DataTables分页器的生成算法</title>
      <link>https://linz1989.github.io/programming/algorithmOfPagination/</link>
      <pubDate>Wed, 01 Jun 2016 21:11:02 +0800</pubDate>
      
      <guid>https://linz1989.github.io/programming/algorithmOfPagination/</guid>
      <description>&lt;p&gt;jQuery有一款很好用的表格插件：&lt;a href=&#34;https://www.datatables.net&#34;&gt;DataTables&lt;/a&gt;，对于构建后台管理之类的CRUD应用非常方便。
&lt;img src=&#34;https://linz1989.github.io/img/content/algorithmOfPagination/1.png&#34; alt=&#34;CRUD应用截图&#34; /&gt;&lt;/p&gt;

&lt;p&gt;DataTables的分页器设计的很简约，一排简单的按钮就标示出了当前页、总页数，以及首页、末页、前一页、后一页的导航。当切换页码的时候，分页器按钮上的页码标识随之而变。&lt;/p&gt;

&lt;p&gt;观察发现，除去前一页、后一页按钮，如果总页数不大于7，则页码全部显示出来；否则，页码按钮固定7个，分别是首页和末页、当前页及当前页的左右页、中间页（用&amp;hellip;标识）。当页码属于前4页或者末4页时，连续显示前5加末页或者后5加首页。&lt;/p&gt;

&lt;p&gt;比如总页数29，分页器随着当前页不同而显示如下：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;当前页&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;页码&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、2、3、4、5、&amp;hellip;、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、2、3、4、5、&amp;hellip;、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、2、3、4、5、&amp;hellip;、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、2、3、4、5、&amp;hellip;、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、&amp;hellip;、4、5、6、&amp;hellip;、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、&amp;hellip;、24、25、26、&amp;hellip;、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、&amp;hellip;、25、26、27、28、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、&amp;hellip;、25、26、27、28、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、&amp;hellip;、25、26、27、28、29&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1、&amp;hellip;、25、26、27、28、29&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;实现的Pagination如下：&lt;/p&gt;

&lt;p&gt;定义dom容器：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;pagination&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;pages&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pagination的定义：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function Pagination(ele,option){
    this.ele = ele;//$(&amp;quot;div.pagination&amp;quot;)
    this.option = option || {};
    this.pages = ele.children(&amp;quot;div.pages&amp;quot;);
    var pagObj = this;
    pagObj.pages.on(&amp;quot;click&amp;quot;,&amp;quot;a&amp;quot;,function(){
        if(!/disable/.test(this.className) &amp;amp;&amp;amp; this.innerHTML != &amp;quot;...&amp;quot;){
            var gotoPage = 1;//需要跳转的页码
            if(/prev/.test(this.className)){
                gotoPage = pagObj.currPage-1;
            }
            else if(/next/.test(this.className)){
                gotoPage = pagObj.currPage+1;
            }
            else{
                gotoPage = parseInt(this.innerHTML);
            }
            pagObj.option.switchPage(gotoPage);//回调switchPage
         }
    })
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;切换页码时，传入当前页码、总页数两个参数，更新Pagination:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Pagination.prototype.refresh = function(option){
    this.currPage = option.currPage;//当前页
    this.totalPage = option.totalPage;//总页数
    var hasPrev = (option.currPage != 1), hasNext = (option.currPage != option.totalPage);
    var htmlStr = &amp;quot;&amp;lt;a class=&#39;prev&amp;quot;+(hasPrev ? &amp;quot;&amp;quot; : &amp;quot; disable&amp;quot;)+&amp;quot;&#39;&amp;gt;&amp;lt;&amp;lt;&amp;lt;/a&amp;gt;&amp;quot;;
    var i;
    if(option.totalPage&amp;lt;=7){
        for(i=1;i&amp;lt;=option.totalPage;i++){
            htmlStr += &amp;quot;&amp;lt;a&amp;quot;+(i==this.currPage ? &amp;quot; class=&#39;curr&#39;&amp;quot; : &amp;quot;&amp;quot;)+&amp;quot;&amp;gt;&amp;quot;+i+&amp;quot;&amp;lt;/a&amp;gt;&amp;quot;
        }
    }
    else{
        var posArr = [1,,,,,,option.totalPage],//存放页码
            leftVal = option.currPage-1,
            rightVal = option.currPage+1;
        if(leftVal&amp;lt;3){
            for(i=1;i&amp;lt;=4;i++) posArr[i] = i+1;
            posArr[5] = &amp;quot;...&amp;quot;;
        }
        else if(option.totalPage-rightVal&amp;lt;3){
            for(i=5;i&amp;gt;=2;i--) posArr[i] = posArr[i+1]-1;
            posArr[1]=&amp;quot;...&amp;quot;;
        }
        else{
            posArr[1] = &amp;quot;...&amp;quot;;
            posArr[2] = leftVal;
            posArr[3] = option.currPage;
            posArr[4] = rightVal;
            posArr[5] = &amp;quot;...&amp;quot;;
        }
        for(i=0;i&amp;lt;posArr.length;i++){
            htmlStr +=&amp;quot;&amp;lt;a&amp;quot;+(posArr[i]==option.currPage ? &amp;quot; class=&#39;curr&#39;&amp;quot; : &amp;quot;&amp;quot;)+&amp;quot;&amp;gt;&amp;quot;+posArr[i]+&amp;quot;&amp;lt;/a&amp;gt;&amp;quot;;
        }
    }
    htmlStr +=&amp;quot;&amp;lt;a class=&#39;next&amp;quot;+(hasNext ? &amp;quot;&amp;quot; : &amp;quot; disable&amp;quot;)+&amp;quot;&#39;&amp;gt;&amp;gt;&amp;gt;&amp;lt;/a&amp;gt;&amp;quot;;
    this.pages.html(htmlStr);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var pagination = new Pagination($(&amp;quot;div.pagination&amp;quot;),{
        switchPage : function(page){
            console.log(&amp;quot;switch page：&amp;quot;+page);
        }
});
pagination.refresh({ currPage : 1 , totalPage : 10});//更新显示
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://linz1989.github.io/about/</link>
      <pubDate>Mon, 30 May 2016 23:28:02 +0800</pubDate>
      
      <guid>https://linz1989.github.io/about/</guid>
      <description>&lt;p&gt;一名普通的Programmer，2011年计算机科学与技术专业毕业。接触过Flex&amp;amp;Java等技术，目前专注于Web前端开发，就职于深圳石豆软件。&lt;/p&gt;

&lt;p&gt;业余喜欢历史、音乐。看起来一副永远不成熟的样子。不善言辞。&lt;/p&gt;

&lt;p&gt;博客是用Hugo创建的，主要是想记录自己的技术成长历程。&lt;/p&gt;

&lt;p&gt;页面样式相比原主题“hugo-pacman-theme”，改动了很多，主要是色调方面，整体布局并没有多大变化。如何搭建可以参考CoderZh的这篇文章：&lt;a href=&#34;http://blog.coderzh.com/2015/08/29/hugo/&#34;&gt;使用hugo搭建个人博客站点&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“生命可以随心所欲，但不能随波逐流”一语出自动漫大师宫崎骏，头像也出自宫崎骏的作品《悬崖上的金鱼公主》。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>